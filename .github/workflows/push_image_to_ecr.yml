name: Deploy to ECR

on:
  # push:
  #   branches: [ main ]
  workflow_run:
    workflows: ["ci to Docker Hub"]
    branches: [ main ]
    types: 
      - completed

jobs:
  
  build:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: Build Image
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        working-directory: ./test-app
    steps:

    - name: Check out code
      uses: actions/checkout@v2

    - name: Declare git branch and sha
      id: vars
      shell: bash
      run: |
        echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
          
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.prod_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.prod_AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: faceit
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG --build-arg VERSION=${{ steps.vars.outputs.sha_short }} .
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:${{ steps.vars.outputs.sha_short }}
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:${{ steps.vars.outputs.sha_short }}
    

    # - name: Setup Terraform
    #   uses: hashicorp/setup-terraform@v1
    #   with:
    #     terraform_version: 0.14.10
    # - name: Terraform Init
    #   id: init
    #   run: terraform init
    #   working-directory: terraform/prod-working
      
    # - name: Update ecs task definition with new image tags
    
